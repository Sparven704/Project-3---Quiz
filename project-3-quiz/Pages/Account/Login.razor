@page "/login"
@using System.Text.Json;
@using System.Text;
@using System.Net;
@using Blazored.LocalStorage;
@using project_3_quiz.ViewModels;
@inject HttpClient _http;
@inject ILocalStorageService _localStorageService;
@inject NavigationManager _navigationManager;

<div class="d-flex justify-content-center">
    <h3>Login</h3>
</div>


<div class="d-flex justify-content-center" style="height: 100vh;">
    
    <EditForm Model="loginModel" OnValidSubmit="LoginAsync" class="text-center" style="max-width: 600px;">

        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="loginModel.Password" class="form-control" type="password" />
        </div>

        <button type="submit" class="btn btn-primary">Login</button>

    </EditForm>
</div>


@code {
    LoginVM loginModel = new LoginVM();

    string APIErrorMessage;
    private async Task LoginAsync()
    {   
            var jsonPayload = JsonSerializer.Serialize(loginModel);
            var requestContent = new StringContent(jsonPayload, Encoding.UTF8, "application/json");
            var response = await _http.PostAsync("api/auth/login", requestContent);

            if (response.StatusCode == HttpStatusCode.BadRequest)
            {
                // Hantera felet
            }
            if (response.StatusCode==HttpStatusCode.OK)
            {
                var tokenResponse = await response.Content.ReadFromJsonAsync<JwtTokenResponseVM>();
                await _localStorageService.SetItemAsync<string>("JwtToken", tokenResponse.AccessToken);

                _navigationManager.NavigateTo("/index");
            }
    }
}
